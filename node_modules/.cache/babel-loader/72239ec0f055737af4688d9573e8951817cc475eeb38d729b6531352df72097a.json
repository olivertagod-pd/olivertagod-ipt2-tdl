{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Oliver Tagod/Desktop/olivertagod_ipt2/olivertagod-ipt2-tdl/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/Oliver Tagod/Desktop/olivertagod_ipt2/olivertagod-ipt2-tdl/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),taskList=_useState2[0],setTaskList=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newTask=_useState4[0],setNewTask=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),searchQuery=_useState6[0],setSearchQuery=_useState6[1];var handleAddTask=function handleAddTask(event){event.preventDefault();if(newTask.trim()!==''){setTaskList([].concat(_toConsumableArray(taskList),[{text:newTask,completed:false,added:Date.now()}]));setNewTask('');}};var handleDeleteTask=function handleDeleteTask(index){var newList=_toConsumableArray(taskList);newList.splice(index,1);setTaskList(newList);};var handleEditTask=function handleEditTask(index,newText){var newList=_toConsumableArray(taskList);newList[index].text=newText;setTaskList(newList);};var handleCompleteTask=function handleCompleteTask(index){var newList=_toConsumableArray(taskList);newList[index].completed=!newList[index].completed;setTaskList(newList);};var countIncompleteTasks=function countIncompleteTasks(){var count=0;taskList.forEach(function(task){if(!task.completed){count++;}});return count;};var countCompletedTasks=function countCompletedTasks(){var count=0;taskList.forEach(function(task){if(task.completed){count++;}});return count;};var handleSearch=function handleSearch(event){setSearchQuery(event.target.value);};var filteredTaskList=taskList.filter(function(task){return task.text.toLowerCase().includes(searchQuery.toLowerCase());});return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"To-Do List\"}),/*#__PURE__*/_jsx(\"div\",{className:\"search\",style:{textAlign:'right'},children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search tasks...\",value:searchQuery,onChange:handleSearch})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddTask,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Add a new task...\",value:newTask,onChange:function onChange(event){return setNewTask(event.target.value);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add\"})]}),/*#__PURE__*/_jsx(\"ul\",{children:filteredTaskList.map(function(task,index){return/*#__PURE__*/_jsxs(\"li\",{className:task.completed?'completed':'',children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:task.completed,onChange:function onChange(){return handleCompleteTask(index);}}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"}),/*#__PURE__*/_jsx(\"span\",{children:task.completed?/*#__PURE__*/_jsx(\"del\",{children:task.text}):task.text})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"edit\",onClick:function onClick(){return handleEditTask(index,prompt('Edit task:',task.text));},children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleDeleteTask(index);},children:\"Delete\"})]})]},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-count\",children:[/*#__PURE__*/_jsx(\"span\",{children:countIncompleteTasks()}),\" task\",countIncompleteTasks()===1?'':'s',\" left to complete,\",' ',/*#__PURE__*/_jsx(\"span\",{children:countCompletedTasks()}),\" task\",countCompletedTasks()===1?'':'s',\" completed\"]})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","taskList","setTaskList","_useState3","_useState4","newTask","setNewTask","_useState5","_useState6","searchQuery","setSearchQuery","handleAddTask","event","preventDefault","trim","concat","_toConsumableArray","text","completed","added","Date","now","handleDeleteTask","index","newList","splice","handleEditTask","newText","handleCompleteTask","countIncompleteTasks","count","forEach","task","countCompletedTasks","handleSearch","target","value","filteredTaskList","filter","toLowerCase","includes","className","children","style","textAlign","type","placeholder","onChange","onSubmit","map","checked","onClick","prompt"],"sources":["C:/Users/Oliver Tagod/Desktop/olivertagod_ipt2/olivertagod-ipt2-tdl/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [taskList, setTaskList] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleAddTask = (event) => {\n    event.preventDefault();\n    if (newTask.trim() !== '') {\n      setTaskList([...taskList, { text: newTask, completed: false, added: Date.now() }]);\n      setNewTask('');\n    }\n  };\n\n  const handleDeleteTask = (index) => {\n    const newList = [...taskList];\n    newList.splice(index, 1);\n    setTaskList(newList);\n  };\n\n  const handleEditTask = (index, newText) => {\n    const newList = [...taskList];\n    newList[index].text = newText;\n    setTaskList(newList);\n  };\n\n  const handleCompleteTask = (index) => {\n    const newList = [...taskList];\n    newList[index].completed = !newList[index].completed;\n    setTaskList(newList);\n  };\n\n  const countIncompleteTasks = () => {\n    let count = 0;\n    taskList.forEach((task) => {\n      if (!task.completed) {\n        count++;\n      }\n    });\n    return count;\n  };\n\n  const countCompletedTasks = () => {\n    let count = 0;\n    taskList.forEach((task) => {\n      if (task.completed) {\n        count++;\n      }\n    });\n    return count;\n  };\n\n  const handleSearch = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const filteredTaskList = taskList.filter((task) =>\n    task.text.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div className=\"container\">\n    <h1>To-Do List</h1>\n    <div className=\"search\" style={{ textAlign: 'right' }}>\n      <input type=\"text\" placeholder=\"Search tasks...\" value={searchQuery} onChange={handleSearch} />\n    </div>\n    <br></br>\n    <form onSubmit={handleAddTask}>\n      <input type=\"text\" placeholder=\"Add a new task...\" value={newTask} onChange={(event) => setNewTask(event.target.value)} />\n      <button type=\"submit\">Add</button>\n    </form>\n      <ul>\n        {filteredTaskList.map((task, index) => (\n          <li key={index} className={task.completed ? 'completed' : ''}>\n            <label>\n              <input type=\"checkbox\" checked={task.completed} onChange={() => handleCompleteTask(index)} />\n              <span className=\"checkmark\"></span>\n              <span>{task.completed ? <del>{task.text}</del> : task.text}</span>\n            </label>\n            <div>\n              <button className=\"edit\" onClick={() => handleEditTask(index, prompt('Edit task:', task.text))}>Edit</button>\n              <button onClick={() => handleDeleteTask(index)}>Delete</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <div className=\"task-count\">\n        <span>{countIncompleteTasks()}</span> task{countIncompleteTasks() === 1 ? '' : 's'} left to complete,{' '}\n        <span>{countCompletedTasks()}</span> task{countCompletedTasks() === 1 ? '' : 's'} completed\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}